[|] obj mesh needs to generate tangents
    [ ] calc tangents
    [x] avg tangents
* pipeline changes
    [-] merge Pipeline and Pass
* mathy stuff
    [|] frustum culling
        [x] ortho (box-based)
        [ ] perspective 
    [ ] partitioner-based collision
        [ ] tilemap collision zones
            [ ] node on_move needed
        [ ] simple box-to-box collision
        [?] Node-box-contains-subnodes guarentee
            # when child added, register listener for move/add
            # node needs vector of scoped_connections (?)
            # flag box for recalculation on child's on_move
        [ ] ortho (box-based) collision
        [ ] perspective collision
[x] add Mesh::Data loading (stubbed)
[|] make partitioner find light nodes (using Node::is_light())
[|] turn basic shader into lit
    # almost done here, just need to get light data into shader
[x] have a Material derived from Texture wrap other Textures
[|] Separate textures/skins from other modifiers in mesh data since they can invoke shader changes
    Order of events for this is:
        - Optionally, the mesh looks at current LOD level, stored in Pass
        - Each Mesh modifier sets flags for what attributes they will provide data for
        - The material is queried with these flags for compatibility
        - Depending on the pass and the texture's logic, the material may change the shader (if needed)
            If this happens:
            - It will ensure the texture is bound as well as other uniforms the texture may need (texture matrix?)
            - tells pass to update all the other uniforms for the custom shader
            - Some scoped object returned by Texture should call pass->shader(nullptr) after the render
[x] Cairo support for 2d vector graphics and fonts
[ ] ingame console w/ python commands
* physics
    [|] implement
        # partially done
    [ ] 3d physical character controller
        # kinematic instead of dynamic?
[ ] particle system
[|] JSON Scene format
[x] cairo surfaces derived from Texture instead of singular with current Canvas
[x] test out pango support
[x] Input system random speed inconsistent
    # corrupted float or logic being called way more than once?
    [x] watch player position changes var or MVP matrix changes in debugger
[x] 2d tilemap drawing is slow (as more tiles are added)
    # seems to be bottlenecked material application / pipeline shader uniforms?
[ ] when state needs_load() is false, enter() is not executed
[ ] convert tile uv generation to texture atlas

